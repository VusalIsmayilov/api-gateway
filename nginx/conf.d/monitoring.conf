# Monitoring and Gateway Administration
# Provides gateway status, metrics, and administrative endpoints

# Gateway status and monitoring
server {
    listen 9090;
    server_name localhost monitor.local;
    
    # Service identification
    add_header X-Service-Name "API-Gateway-Monitor" always;
    add_header X-Gateway-Version "1.0.0" always;
    
    # Restrict access to monitoring (add IP whitelist in production)
    # allow 127.0.0.1;
    # allow 10.0.0.0/8;
    # allow 172.16.0.0/12;
    # allow 192.168.0.0/16;
    # deny all;
    
    # Gateway health check
    location /health {
        access_log off;
        return 200 '{"status":"healthy","service":"api-gateway","timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }
    
    # Nginx status page
    location /nginx_status {
        stub_status on;
        access_log off;
    }
    
    # Gateway configuration info
    location /info {
        access_log off;
        return 200 '{"gateway":"nginx","version":"1.25-alpine","services":["authservice","projectservice","keycloak","pgadmin"],"timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }
    
    # Service discovery endpoint
    location /services {
        access_log off;
        return 200 '{
            "services": {
                "authservice": {
                    "url": "http://localhost",
                    "health": "http://localhost/health",
                    "swagger": "http://localhost/swagger"
                },
                "projectservice": {
                    "url": "http://localhost:5002",
                    "health": "http://localhost:5002/health",
                    "swagger": "http://localhost:5002/swagger"
                },
                "keycloak": {
                    "url": "http://localhost:8081",
                    "admin": "http://localhost:8081/admin",
                    "health": "http://localhost:8081/health/ready"
                },
                "pgadmin": {
                    "url": "http://localhost:8080"
                }
            },
            "timestamp": "$time_iso8601"
        }';
        add_header Content-Type application/json;
    }
    
    # Rate limiting status
    location /rate-limits {
        access_log off;
        return 200 '{
            "rate_limits": {
                "global": "100r/s",
                "api": "10r/s",
                "auth": "5r/s",
                "admin": "2r/s"
            },
            "connections": {
                "per_ip": "20"
            },
            "timestamp": "$time_iso8601"
        }';
        add_header Content-Type application/json;
    }
    
    # Log access (simplified log viewer)
    location /logs {
        access_log off;
        return 200 '{"message":"Use docker logs api_gateway for real-time logs","timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }
    
    # Default monitoring page
    location / {
        return 200 '{
            "api_gateway": {
                "status": "running",
                "endpoints": {
                    "health": "/health",
                    "nginx_status": "/nginx_status",
                    "info": "/info",
                    "services": "/services",
                    "rate_limits": "/rate-limits"
                }
            },
            "timestamp": "$time_iso8601"
        }';
        add_header Content-Type application/json;
    }
}